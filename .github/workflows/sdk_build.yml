name: build

on: 
  push:
    branches:
      - master
      - release-*
    tags:
      - v*
    
  pull_request:
    branches: 
    - master
    - release-*

jobs:
  build:
    name: Build Projects
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [release, debug]
    steps:
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.100
      - name: Build solution - release
        run: dotnet build all.sln --configuration release
      - name: Test solution - release
        run: dotnet test test/test.sln --configuration release
      - name: Generate Nuget Packages - release
        run: dotnet pack src/prod.sln --configuration release --include-symbols --no-build
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: release_drop
          path: bin/release/nugets
      - name: Publish binaries to github for tags
        if: startswith(github.ref, 'refs/tags/v')
        run: |
          # Parse release version and set REL_VERSION
          python ./.github/scripts/get_release_version.py
          echo "installing github-release-cli..."
          sudo npm install --slient --no-progress -g github-release-cli
          # Get the list of files
          RELEASE_ARTIFACT=(bin/release/nugets/*)
          # Parse repository to get owner and repo names
          OWNER_NAME="${GITHUB_REPOSITORY%%/*}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          export GITHUB_TOKEN=${{ secrets.RELEASE_USER_TOKEN }}
          echo "Uploading Nuget packages to GitHub Release"
          github-release upload \
            --owner $OWNER_NAME --repo $REPO_NAME \
            --tag "v${REL_VERSION}" \
            --name "Dapr dotnet SDK v${REL_VERSION}" \
            --prerelease true \
            ${RELEASE_ARTIFACT[*]}
