# actionscore/cs-sdk pipeline

trigger:
- master
- release-*

stages:
- stage: Build
  jobs:
  - job: 'build_projects'
    pool:
      vmImage: 'windows-2019'
    strategy:
      maxParallel: 2
      matrix:
        debug:
          configuration: debug
        release:
          configuration: release
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Build solution - $(Configuration)'
        inputs:
          command: 'build'
          arguments: '--configuration $(Configuration)'
          projects: 'code.sln'
      - task: DotNetCoreCLI@2
        displayName: 'Test - $(Configuration)'
        inputs:
          command: 'test'
          arguments: '--configuration $(Configuration)'
          projects: 'code.sln'
      - task: EsrpCodeSigning@1
        displayName: ESRP CodeSign'
        condition: and(eq(variables['Configuration'], 'release'), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          ConnectedServiceName: 'ActionsSigning'
          FolderPath: 'bin/$(Configuration)'
          Pattern: 'Microsoft.Actions*.dll'
          UseMinimatch: true
          signConfigType: 'inlineSignParams'
          inlineOperation: |
            [
                {
                    "keyCode": "CP-233863-SN",
                    "operationSetCode": "StrongNameSign",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-233863-SN",
                    "operationSetCode": "StrongNameVerify",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
            ]
          SessionTimeout: '20'
          MaxConcurrency: '50'
          MaxRetryAttempts: '5'
      - task: EsrpCodeSigning@1
        displayName: ESRP Authenticode CodeSign'
        condition: and(eq(variables['Configuration'], 'release'), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          ConnectedServiceName: 'ActionsSigning'
          FolderPath: 'bin/$(Configuration)'
          Pattern: 'Microsoft.Actions*.dll'
          UseMinimatch: true
          signConfigType: 'inlineSignParams'
          inlineOperation: |
            [{
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolSign",
                    "parameters": [{
                            "parameterName": "OpusName",
                            "parameterValue": "Microsoft"
                        },
                        {
                            "parameterName": "OpusInfo",
                            "parameterValue": "http://www.microsoft.com"
                        },
                        {
                            "parameterName": "FileDigest",
                            "parameterValue": "/fd \"SHA256\""
                        },
                        {
                            "parameterName": "PageHash",
                            "parameterValue": "/NPH"
                        },
                        {
                            "parameterName": "TimeStamp",
                            "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolVerify",
                    "parameters": [],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
            ]
          SessionTimeout: '20'
          MaxConcurrency: '50'
          MaxRetryAttempts: '5'
      - task: DotNetCoreCLI@2
        displayName: 'Package nuget - $(Configuration)'
        inputs:
          command: 'pack'
          arguments: '--configuration $(Configuration)'
          packagesToPack: 'src/Microsoft.Actions.Actors/Microsoft.Actions.Actors.csproj'
          nobuild: true
          versioningScheme: 'off'
      - task: EsrpCodeSigning@1
        displayName: ESRP CodeSign - Nuget Package'
        condition: and(eq(variables['Configuration'], 'release'), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          ConnectedServiceName: 'ActionsSigning'
          FolderPath: 'bin/$(Configuration)'
          Pattern: 'Microsoft.Actions*.nupkg'
          UseMinimatch: true
          signConfigType: 'inlineSignParams'
          inlineOperation: |
            [
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetSign",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetVerify",
                    "parameters": [ ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
            ]
          SessionTimeout: '20'
          MaxConcurrency: '50'
          MaxRetryAttempts: '5'
      - task: CmdLine@2
        displayName: "Show ESRP signing result"
        condition: and(eq(variables['Configuration'], 'release'), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          script: 'type bin\$(Configuration\*.md'
      - task: CopyFiles@2
        condition: ne(variables['Build.Reason'], 'PullRequest')
        inputs:
          SourceFolder: 'bin/$(Configuration)'
          Contents: '*.dll,*.pdb,*.nupkg'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        condition: ne(variables['Build.Reason'], 'PullRequest')
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: '$(Configuration)_drop'
          publishLocation: 'Container'
